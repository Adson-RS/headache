

function love.load()
	-----------circulo
		  button = {}
		  button.x = 200
		  button.y = 200
		  button.size = 50
	------------------
	
			highScore = 0
			pontuacao = 0
			timer = 10
			start = 1


	----------------- quadrado
			ClickAndLose = {}
			ClickAndLose.x = 400
			ClickAndLose.y = 500
			ClickAndLose.lado = 100
	-----------------

		perder = false
		imagemPerdeu = love.graphics.newImage( "ovee.jpg" ) -- vai printar essa imagem na tela
		dimensoes = love.graphics.newQuad(0, 0, 1000, 1080, imagemPerdeu:getWidth(), imagemPerdeu:getHeight())


				font = love.graphics.newFont(40)
	end

	function love.update(dt)

		  if start == 2 then
			if timer > 0 then
			  timer = timer - dt
			end

			if timer < 0 then
			  timer = 0
			  start = 1
			  pontuacao = 0
			end
		  end

		------ circulo
		if button.y <= 900 and button.y >= 100 then   --- faz o circulo se mover pra cima
			button.y = button.y - 300 * dt
		end

			if button.x <= 700 and button.x >= 100 then
				button.x = button.x + 300 * dt
			end
		--------------

			-------- quadrado
			if ClickAndLose.x >= 100 and ClickAndLose.x < 700 then -- aqui a condição de movimento
				ClickAndLose.x = ClickAndLose.x - 100 * dt

				if ClickAndLose.x == 100 then
					ClickAndLose.x = ClickAndLose.x + 100*dt
				end
			end
			-----------------

	end

	function love.draw()

		 if start == 2 then
			love.graphics.setColor(1, 0, 0)
			love.graphics.circle("fill", button.x, button.y, button.size)
			love.graphics.rectangle( "fill", ClickAndLose.x, ClickAndLose.y, ClickAndLose.lado, ClickAndLose.lado)

		  end

				love.graphics.setColor(1, 1, 1)
				love.graphics.setFont(font)
				love.graphics.print("Pontos: " .. pontuacao)
				love.graphics.print("Tempo: " .. math.ceil(timer), 250, 0)
				love.graphics.print("High Score: " .. highScore, 500, 0)

				  if pontuacao > highScore then
					highScore = pontuacao
				  end

					  if start == 1 then
						love.graphics.printf("Click anywhere to begin!", 0, love.graphics.getHeight() / 2 - 50, love.graphics.getWidth(), "center")
					  end


							if perder then
								love.graphics.draw( imagemPerdeu, dimensoes, 0, 0 )
							end
	end

	function love.mousepressed(x, y, btn, istouch, presses)

		  if btn == 1 and start == 2 then
				if distance(button.x, button.y, love.mouse.getX(), love.mouse.getY()) < button.size then
				  pontuacao = pontuacao + 1
				  ------ circulo
				  button.x = math.random(button.size, love.graphics.getWidth() - button.size)
				  button.y = math.random(button.size, love.graphics.getHeight() - button.size)

					------ quadrado
					ClickAndLose.x = math.random(ClickAndLose.lado, love.graphics.getWidth() - ClickAndLose.lado)
					ClickAndLose.y = math.random(ClickAndLose.lado, love.graphics.getHeight() - ClickAndLose.lado)

				elseif distance( ClickAndLose.x, ClickAndLose.y, love.mouse.getX(), love.mouse.getY()) < ClickAndLose.lado then
					perder = true
				end
		  end

			  if start == 1 then
				start = 2
				timer = 30
			  end
	end

	function distance(x1, y1, x2, y2)
		return math.sqrt((y2 - y1)^2 + (x2 - x1)^2)
	end







