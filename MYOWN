
function love.load()
		  button = {}
			  button.x = 400
			  button.y = 200
			  button.size = 100

			pontuacao = 0
			timer = 10
			start = 1


			--- quadrado
			ClickAndLose = {}
				ClickAndLose.x = 500
				ClickAndLose.y = 500
				ClickAndLose.lado = 200
			---


			------Circulo2
			otoCircle = {}
				otoCircle.x = 900
				otoCircle.y = 100
				otoCircle.size = 100
			-----------------

			-----Circulo 3
			redondo = {}
				redondo.x = 100
				redondo.y = 900
				redondo.size = 100
			-------------

			-----Quadrado 2
			naoCirculo = {}
				naoCirculo.x = 300
				naoCirculo.y = 300
				naoCirculo.lado = 200
			---------------

		perder = false
			imagemPerdeu = love.graphics.newImage( "ovee.jpg" ) -- vai printar essa imagem na tela
				dimensoes = love.graphics.newQuad(0, 0, 1000, 1080, imagemPerdeu:getWidth(), imagemPerdeu:getHeight())


				font = love.graphics.newFont(40)
				PequenaFonte = love.graphics.newFont( 20 )
	end

	function love.update(dt)

	local altura = love.graphics.getHeight()
	local largura = love.graphics.getWidth()

		  if start == 2 then
			if timer > 0 then
			  timer = timer - dt
			end

			if timer < 0 then
			  timer = 0
			  start = 1
			  pontuacao = 0
			end
		  end

		------ circulo
		if button.y <= (altura - 100) and button.y >= 100 then   --- faz o circulo se mover pra cima
			button.y = button.y - 100 * dt
		end

			if button.x <= 700 and button.x >= 100 then
				button.x = button.x + 100 * dt
			end
		--------------

			-------- quadrado
			if ClickAndLose.x >= 100 and ClickAndLose.x < (largura - 100) then -- aqui a condição de movimento
				ClickAndLose.x = ClickAndLose.x - 100 * dt

				if ClickAndLose.x == 100 then
					ClickAndLose.x = ClickAndLose.x + 100*dt
				end
			end
			-----------------

			---------CirculoAmarelo
			if otoCircle.y < altura - 100 and otoCircle.y >= 100 then
				otoCircle.y = otoCircle.y - 100 * dt
			end
			------------

			---------circulo Rosa
			if redondo.x >= 100 and redondo.x <= (largura - 100) then
				redondo.x = redondo.x + 100 * dt
			end

			--------- quadrado Amarelo
			if naoCirculo.x < largura - 100 and naoCirculo.x > 100 then
				naoCirculo.x = naoCirculo.x + 100 * dt
			end


	end

	function love.draw()

		 if start == 2 then
			love.graphics.setColor(0, 0, 0.4)
			love.graphics.circle("fill", button.x, button.y, button.size)

			love.graphics.setColor( 0, 0.2, 0.4 )
			love.graphics.rectangle( "fill", ClickAndLose.x, ClickAndLose.y, ClickAndLose.lado, ClickAndLose.lado)

			love.graphics.setColor(0.8, 0.7, 0)
			love.graphics.circle( "fill",otoCircle.x, otoCircle.y, otoCircle.size)

			love.graphics.setColor(115, 0, 255)
			love.graphics.circle( "fill", redondo.x, redondo.y, redondo.size)

			love.graphics.setColor(0, 0.1, 0.5)
			love.graphics.rectangle( "fill", naoCirculo.x, naoCirculo.y, naoCirculo.lado, naoCirculo.lado)
		  end

				love.graphics.setColor(1, 1, 1)
				love.graphics.setFont(font)
				love.graphics.print("Pontos: " .. pontuacao)
				love.graphics.print("Tempo: " .. math.ceil(timer), 250, 0)

					  if start == 1 then
						love.graphics.printf("Click anywhere to begin!", 1, love.graphics.getHeight() / 2 - 10, love.graphics.getWidth(), "center")

						love.graphics.setFont( PequenaFonte )
						love.graphics.printf("(Only blue circles)", 1, love.graphics.getHeight() / 2 + 40, love.graphics.getWidth(), "center")
					  end



							if perder then
								love.graphics.draw( imagemPerdeu, dimensoes, 0, 0 )
							end
	end

	function love.mousepressed(x, y, btn, istouch, presses)

		  if btn == 1 and start == 2 then
				if distance(button.x, button.y, love.mouse.getX(), love.mouse.getY()) < button.size then
				  pontuacao = pontuacao + 1

				------ circulo Azul
				button.x = math.random(button.size, love.graphics.getWidth() - button.size)
				button.y = math.random(button.size, love.graphics.getHeight() - button.size)

				------ quadrado
				ClickAndLose.x = math.random(ClickAndLose.lado, love.graphics.getWidth() - ClickAndLose.lado)
				ClickAndLose.y = math.random(ClickAndLose.lado, love.graphics.getHeight() - ClickAndLose.lado)

				------ CirculoAmarelo
				otoCircle.x = math.random(otoCircle.size, love.graphics.getWidth() - otoCircle.size)
				otoCircle.y = math.random(otoCircle.size, love.graphics.getHeight() - otoCircle.size)

				------ circulo qualquer
				redondo.x = math.random(redondo.size, love.graphics.getWidth() - redondo.size)
				redondo.y = math.random(redondo.size, love.graphics.getHeight() - redondo.size)

				------ quadrado amarelo
				naoCirculo.x = math.random(naoCirculo.lado, love.graphics.getWidth() - naoCirculo.lado)
				naoCirculo.y = math.random(naoCirculo.lado, love.graphics.getHeight() - naoCirculo.lado)


				elseif distance( ClickAndLose.x, ClickAndLose.y, love.mouse.getX(), love.mouse.getY() ) < ClickAndLose.lado or
							distance( otoCircle.x, otoCircle.y, love.mouse.getX(), love.mouse.getY() ) < otoCircle.size or
								distance( redondo.x, redondo.y, love.mouse.getX(), love.mouse.getY() ) < redondo.size or
									distance( naoCirculo.x, naoCirculo.y, love.mouse.getX(), love.mouse.getY() ) < naoCirculo.lado then
					perder = true
				end

		  end

			  if start == 1 then
				start = 2
				timer = 30
			  end
	end

	function distance(x1, y1, x2, y2)

	 return math.sqrt((y2 - y1)^2 + (x2 - x1)^2)

	end








